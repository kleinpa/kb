load("@rules_python//python:defs.bzl", "py_binary")
load("@com_github_kleinpa_keyboardtoolbox_py_deps//:requirements.bzl", "requirement")
load("//kbtb:defs.bzl", "kbpb_from_kle", "keyboard_plate_dxf")
load("@com_github_kleinpa_kicadbazel//tools:defs.bzl", "gerbers_from_kicad")

py_binary(
    name = "build_test_layout",
    srcs = ["build_test_layout.py"],
    deps = [
        requirement("absl-py"),
        "//kbtb:keyboard_lib",
    ],
)

genrule(
    name = "test_layout",
    outs = ["test_layout.pb"],
    cmd = "./$(execpath :build_test_layout) --output=\"$@\"",
    exec_tools = [":build_test_layout"],
    visibility = ["//visibility:public"],
)

# TODO(peterklein): keyboard_plate_svg()
genrule(
    name = "test_layout_svg",
    srcs = [":test_layout"],
    outs = ["test_layout.svg"],
    cmd = "./$(execpath //kbtb/cli:to_svg) --input=\"$<\" --format=svg --output=\"$@\"",
    exec_tools = ["//kbtb/cli:to_svg"],
)

# TODO(peterklein): keyboard_plate_kicad()
genrule(
    name = "test_plate_kicad",
    srcs = [":test_layout"],
    outs = ["plate.kicad_pcb"],
    cmd = "LD_LIBRARY_PATH='$(execpath //kbtb/cli).runfiles/com_gitlab_kicad_kicad' ./$(execpath //kbtb/cli) --input=\"$<\" --format=plate_kicad_pcb --output=\"$@\"",
    exec_tools = ["//kbtb/cli"],
    stamp = True,
)

gerbers_from_kicad(
    name = "test_plate_pcb",
    src = ":test_plate_kicad",
)

# TODO(peterklein): keyboard_board_kicad()
genrule(
    name = "test_board_kicad",
    srcs = [":test_layout"],
    outs = ["board.kicad_pcb"],
    cmd = "LD_LIBRARY_PATH='$(execpath //kbtb/cli).runfiles/com_gitlab_kicad_kicad' ./$(execpath //kbtb/cli) --input=\"$<\" --format=main_kicad_pcb --output=\"$@\"",
    exec_tools = [
        "//kbtb/cli",
        "//kbtb/kicad_modules",
        "@com_github_ai03_2725_typec//:all",
        "@com_github_keebio_keebio_parts//:all",
        "@com_gitlab_kicad_libraries_kicad_footprints//:all",
    ],
    stamp = True,
)

genrule(
    name = "test_qmk",
    srcs = [":test_layout"],
    outs = ["test_qmk.h"],
    cmd = "LD_LIBRARY_PATH='$(execpath //kbtb/cli).runfiles/com_gitlab_kicad_kicad' ./$(execpath //kbtb/cli) --input=\"$<\" --format=h --output=\"$@\"",
    exec_tools = ["//kbtb/cli"],
)

keyboard_plate_dxf(
    name = "test_top_plate",
    src = ":test_layout",
    plate_type = "top",
)

keyboard_plate_dxf(
    name = "test_bottom_plate",
    src = ":test_layout",
    plate_type = "bottom",
)

kbpb_from_kle(
    name = "tkl_layout",
    src = "tkl-kle.json",
    visibility = ["//visibility:public"],
)

# TODO(peterklein): keyboard_plate_svg()
genrule(
    name = "tkl_layout_svg",
    srcs = [":tkl_layout"],
    outs = ["tkl_layout.svg"],
    cmd = "./$(execpath //kbtb/cli:to_svg) --input=\"$<\" --format=svg --output=\"$@\"",
    exec_tools = ["//kbtb/cli:to_svg"],
)

keyboard_plate_dxf(
    name = "tkl_layout_plate",
    src = ":tkl_layout",
    plate_type = "top",
)

genrule(
    name = "tkl_kicad",
    srcs = [":tkl_layout"],
    outs = ["tkl.kicad_pcb"],
    cmd = "LD_LIBRARY_PATH='$(execpath //kbtb/cli).runfiles/com_gitlab_kicad_kicad' ./$(execpath //kbtb/cli) --input=\"$<\" --format=main_kicad_pcb --output=\"$@\"",
    exec_tools = [
        "//kbtb/cli",
        "//kbtb/kicad_modules",
        "@com_github_ai03_2725_typec//:all",
        "@com_github_keebio_keebio_parts//:all",
        "@com_gitlab_kicad_libraries_kicad_footprints//:all",
    ],
    stamp = True,
)

py_binary(
    name = "build_numpad_layout",
    srcs = ["build_numpad_layout.py"],
    deps = [
        requirement("absl-py"),
        "//kbtb:keyboard_lib",
        "//kbtb:kle",
    ],
)

genrule(
    name = "numpad_layout",
    outs = ["numpad_layout.pb"],
    cmd = "./$(execpath :build_numpad_layout) --output=\"$@\"",
    exec_tools = [":build_numpad_layout"],
    visibility = ["//visibility:public"],
)

keyboard_plate_dxf(
    name = "numpad_top_plate",
    src = ":numpad_layout",
    plate_type = "bottom",
)

keyboard_plate_dxf(
    name = "numpad_bottom_plate",
    src = ":numpad_layout",
    plate_type = "bottom",
)

genrule(
    name = "numpad_kicad",
    srcs = [":numpad_layout"],
    outs = ["numpad_board.kicad_pcb"],
    cmd = "LD_LIBRARY_PATH='$(execpath //kbtb/cli).runfiles/com_gitlab_kicad_kicad' ./$(execpath //kbtb/cli) --input=\"$<\" --format=main_kicad_pcb --output=\"$@\"",
    exec_tools = [
        "//kbtb/cli",
        "//kbtb/kicad_modules",
        "@com_github_ai03_2725_typec//:all",
        "@com_github_keebio_keebio_parts//:all",
        "@com_gitlab_kicad_libraries_kicad_footprints//:all",
    ],
    stamp = True,
)

genrule(
    name = "numpad_plate_kicad",
    srcs = [":numpad_layout"],
    outs = ["numpad_plate.kicad_pcb"],
    cmd = "LD_LIBRARY_PATH='$(execpath //kbtb/cli).runfiles/com_gitlab_kicad_kicad' ./$(execpath //kbtb/cli) --input=\"$<\" --format=plate_kicad_pcb --output=\"$@\"",
    exec_tools = ["//kbtb/cli"],
)

gerbers_from_kicad(
    name = "numpad_plate_pcb",
    src = ":numpad_plate_kicad",
)

# TODO(peterklein): keyboard_plate_svg()
genrule(
    name = "numpad_layout_svg",
    srcs = [":numpad_layout"],
    outs = ["numpad_layout.svg"],
    cmd = "./$(execpath //kbtb/cli:to_svg) --input=\"$<\" --format=svg --output=\"$@\"",
    exec_tools = ["//kbtb/cli:to_svg"],
)

py_binary(
    name = "build_stm32f072_demo",
    srcs = ["build_stm32f072_demo.py"],
    deps = [
        requirement("absl-py"),
        "//kbtb:keyboard_lib",
        "//kbtb:kle",
    ],
)

genrule(
    name = "stm32f072_demo",
    outs = ["stm32f072_demo.pb"],
    cmd = "./$(execpath :build_stm32f072_demo) --output=\"$@\"",
    exec_tools = [":build_stm32f072_demo"],
    visibility = ["//visibility:public"],
)

# TODO(peterklein): keyboard_board_kicad()
genrule(
    name = "stm32f072_demo_kicad",
    srcs = [":stm32f072_demo"],
    outs = ["stm32f072_demo.kicad_pcb"],
    cmd = "LD_LIBRARY_PATH='$(execpath //kbtb/cli).runfiles/com_gitlab_kicad_kicad' ./$(execpath //kbtb/cli) --input=\"$<\" --format=main_kicad_pcb --output=\"$@\"",
    exec_tools = [
        "//kbtb/cli",
        "//kbtb/kicad_modules",
        "@com_github_ai03_2725_typec//:all",
        "@com_github_keebio_keebio_parts//:all",
        "@com_gitlab_kicad_libraries_kicad_footprints//:all",
    ],
    stamp = True,
)
