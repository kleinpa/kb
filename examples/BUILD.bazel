load("@bazel_skylib//rules:build_test.bzl", "build_test")
load("@bazel_tools//tools/build_defs/pkg:pkg.bzl", "pkg_tar")
load("@keyboard_toolbox_pip//:requirements.bzl", "requirement")
load("@rules_python//python:defs.bzl", "py_binary")
load("//kbtb:defs.bzl", "build_keyboard")

py_binary(
    name = "build_unisplit42",
    srcs = ["build_unisplit42.py"],
    deps = [
        requirement("absl-py"),
        "//kbtb:keyboard_lib",
    ],
)

genrule(
    name = "unisplit42_proto",
    outs = ["unisplit42.pb"],
    cmd = "$(execpath :build_unisplit42) $@",
    tools = [":build_unisplit42"],
    visibility = ["//visibility:public"],
)

build_keyboard(
    name = "unisplit42",
    src = ":unisplit42_proto",
)

pkg_tar(
    name = "unisplit42_tar",
    srcs = [
        "unisplit42.kicad_pcb",
        "unisplit42.svg",
        "unisplit42-info.json",
    ],
)

py_binary(
    name = "build_60ansi",
    srcs = ["build_60ansi.py"],
    deps = [
        requirement("absl-py"),
        "//kbtb:keyboard_lib",
        "//kbtb:kle",
    ],
)

genrule(
    name = "60ansi_proto",
    outs = ["60ansi.pb"],
    cmd = "$(execpath :build_60ansi) $@",
    tools = [":build_60ansi"],
    visibility = ["//visibility:public"],
)

build_keyboard(
    name = "60ansi",
    src = ":60ansi_proto",
)

pkg_tar(
    name = "60ansi_tar",
    srcs = [
        "60ansi.kicad_pcb",
        "60ansi.svg",
        "60ansi_plate_bottom.dxf",
        "60ansi_plate_bottom.kicad_pcb",
        "60ansi_plate_top.dxf",
        "60ansi_plate_top.kicad_pcb",
    ],
)

build_test(
    name = "build_test",
    targets = [
        ":unisplit42_tar",
        ":60ansi_tar",
    ],
)
